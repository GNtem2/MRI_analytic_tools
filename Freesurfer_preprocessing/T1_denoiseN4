#!/bin/bash
print_help() {
echo "
Usage:

	`basename $0` NIFTI ID output_directory
		NIFTI:		Nifti file to apply the denoise
		ID: 		Identification for the output file (NO extension)
		Out directory: 	Path to output, could be here '.'

This script aplies a non-local-means denoising using minc-toolkit and the N4 bias field correction from ANTs. 	
NOTE: this script REQUIRES previous installation of FreeSurfer, minc-toolkit & ANTs.

Raul RC
INB, January, 2018
raulrcruces@inb.unam.mx

"
}

######### HELP ######### 
if [ $# -lt 3 ]
then
	echo -e "\e[0;31m\n[ERROR]... Argument missing: \n\e[0m\t\tNifti: $1\n\t\tID: $2\n\t\tOutput directory:$3"
	print_help
	exit 1
fi

# --------------------------------------------------------------- # 
# 		Starting Requirements & Warnings
# --------------------------------------------------------------- # 
NII=$1
id=${2/.nii.gz/}
outdir=$3

echo -e "\033[48;5;22m\n[INIT]\t\tDenoise & Bias Field Correction of file $NII\n\033[0m"

#---------------- Declaring variables ----------------#
tmp=/tmp/dnsN4_$RANDOM
out=${tmp}/${id}.nii.gz
outfile=${outdir}/${id}.nii.gz
mnc=${tmp}/${id}_mnc.mnc
mncdn=${tmp}/${id}_mnc_nlm.mnc

if [ ! -f $NII ]; then echo -e "\e[0;31m\n[ERROR]... File not found: $NII\n\e[0m"; exit 2; fi
if [ ! -d $outdir ]; then echo -e "\e[0;31m\n[ERROR]... Directory not found: $outdir\n\e[0m"; exit 2; fi
format=nii.gz
if [ "${NII/$format}" = "$NII" ] ; then echo -e "\e[0;31m\n[ERROR]... $NII must be a compressed nifti, with extension 'nii.gz'\n\e[0m"; exit 0; else echo -e "\t[INFO]... $NII has the correct format"; fi
if [ ! -f `which mri_convert` ]; then echo -e "\e[0;31m\n[ERROR]... Check your FreeSurfer installation \n\e[0m"; exit 0; else echo -e "\t[INFO]... FreeSurfer seems to work."; fi
if [ ! -f `which mincnlm` ]; then echo -e "\e[0;31m\n[ERROR]... Check your minc-toolkit installation \n\e[0m"; exit 0; else echo -e "\t[INFO]... minc-toolkit seems to work."; fi
if [ ! -f `which N4BiasFieldCorrection` ]; then echo -e "\e[0;31m\n[ERROR]... Check your ANTs installation \n\e[0m"; exit 0; else echo -e "\t[INFO]... ANTs seems to work."; fi
if [ -f $outfile ]; then echo -e "\e[0;31m\n[ERROR]... Outfile already exist: $outfile\n\e[0m"; exit 0; fi

#---------------- Timer & Beginning ----------------#
aloita=$(date +%s.%N)


#---------------- Temporal directory ----------------# 
mkdir $tmp
echo  -e "\033[38;5;45m\n[INFO]... tmp directory: \033[0m"
echo   -e "\033[38;5;208mDIR -->\t $tmp\033[0m"


#---------------- Converts T1 nifti to minc format and back to T1  ----------------#
echo  -e "\033[38;5;45m\n[INFO]... Creando un archivo minc \033[0m"
mri_convert $NII ${mnc}

echo  -e "\033[38;5;45m\n[INFO]... Aplicando la limpieza de ruido con non-local means \033[0m"
mincnlm ${mnc} ${mncdn}

echo  -e "\033[38;5;45m\n[INFO]... Transformando de minc a nifti \033[0m"
mri_convert ${mncdn} $out

echo  -e "\033[38;5;45m\n[INFO]... N4 bias field correction \033[0m"
N4BiasFieldCorrection -d 3 -i $out -o $outfile



#----------- Removes temporal directory -----------#
echo -e "\033[38;5;45m\n[INFO]... Removing temporal files: $tmp\e[0m"
rm -Rv $tmp


#----------- Outfile -----------#
echo  -e "\033[38;5;45m\n[INFO]... Outfile: ${outfile} \033[0m"


#----------- Total Time -----------#
lopuu=$(date +%s.%N)
eri=$(echo "$lopuu - $aloita" | bc)
echo -e "\\033[38;5;220m \n TOTAL running time: ${eri} seconds \n \\033[0m"








